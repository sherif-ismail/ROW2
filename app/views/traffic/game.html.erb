<!doctype html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8" />
    <title>Phaser - Making your first game, part 9</title>
    <script type="text/javascript" src="js/phaser.min.js"></script>
    <style type="text/css">
    body {
        margin: 0;
    }
    </style>
</head>
<body>
    <script type="text/javascript">
    <%= srand(Time.now.to_i) %>
    var game = new Phaser.Game(1000, 600, Phaser.AUTO, '', { preload: preload, create: IntroCreate, update: update });
    var car;
    var bar;
    var platforms;
    var lines;
    var cursors;
    var startBackground;
    var speed = 0;
    var directionSpeed;
    var dudes;
    var startButton;
    var start;
    var score = 0;
    var scoreText;
    var nitroText;
    var speedText;
    var msgText;
    var nitroLeft = 100;
    var nitro;
    var dudes;
    var diamonds;
    var collected = true;
    var stops;
    var timerText;
    var time;
    var stars;
    var Popup;
    var allQuestions = <%= raw @questions.to_json %>;
    var allAnswers = <%= raw @answers.to_json %>;
    var allCategories = <%= raw @categories.to_json %>;
    var orderOfQuestions = <%= raw (0..@answers.length-1).to_a.shuffle %>;
    var images = <%= raw @images.to_json %>
    var currentImage;
    var currentQuestion = 0;
    var correctAnswer;
    var questionText;
    var blockAnswer;
    var answerText = [];
    var normalStyle; 
    var hoverStyle;
    var correctStyle;
    var wrongStyle;

    function preload() {
        game.load.bitmapFont('desyrel', '<%= asset_path 'desyrel.png' %>', '<%= asset_path 'desyrel.xml' %>');
        game.load.spritesheet('dude', '<%= asset_path 'dude.png' %>', 32, 48);
        game.load.spritesheet('button-start','<%= asset_path 'button-start.png' %>', 401, 143)
        game.load.image('Street', '<%= asset_path 'Background.png' %>');
        game.load.image('square', '<%= asset_path 'square.png' %>');
        game.load.image('line', '<%= asset_path 'line.png' %>');
        game.load.image('triangle', '<%= asset_path 'triangle.png' %>');
        game.load.image('midan', '<%= asset_path 'midan.png' %>');
        game.load.image('background', '<%= asset_path 'start_Background.png' %>');
        game.load.image('ground',  '<%= asset_path 'platform.png' %>');
        game.load.image('popup',  '<%= asset_path 'Black_button.png' %>');
        game.load.image('round',  '<%= asset_path 'round.png' %>');
        game.load.image('src_halo', '<%= asset_path 'dest1.png' %>');
        game.load.image('star', '<%= asset_path 'star.png' %>');
        game.load.image('ball',  '<%= asset_path 'ball-tlb.png' %>');
        game.load.image('diamond', '<%= asset_path 'diamond.png' %>');
        game.load.image('car', '<%= asset_path 'car.png' %>');
        game.load.image('Bar', '<%= asset_path 'Bar.png' %>');
        game.load.image('street_block', '<%= asset_path 'square-road.png' %>');
        game.load.image('street_line', '<%= asset_path 'line-road.png' %>');
        game.load.image('street_line_2', '<%= asset_path 'line-2-road.png' %>');
        game.load.image('street_round', '<%= asset_path 'turn-road.png' %>');
        game.load.image('street_round_2', '<%= asset_path 'round-road.png' %>');
        game.load.image('street_turn', '<%= asset_path 'turn-2-road.png' %>');
        game.load.image('asfalt', '<%= asset_path 'plain-road.png' %>');
        //<% for x in @images %>
        //game.load.image('<%= x %>','<%= asset_path x %>');
        //<% end %>
    }

    function IntroCreate(){
      start = false;
      startBackground = game.add.sprite(0,0,'background');
      //game.add.sprite(0,0,'test').scale.setTo(0.1,0.1)
      startButton = game.add.button(200,450,'button-start',IntroDestroy,this,1,0,2);
      game.add.bitmapText(game.world.width/2, 50, 'desyrel', 'Rules On Wheels', 40);
      game.add.bitmapText(100, 150, 'desyrel', 'Click Start to Begin!', 36);
    }

    function IntroDestroy(){     
        startButton.destroy();
        create();
    }

    function create() {

    //  We're going to be using physics, so enable the Arcade Physics system
    game.physics.startSystem(Phaser.Physics.ARCADE);

    //  A simple background for our game
    var temp = game.add.sprite(0, 0, 'asfalt');
    temp.scale.setTo(3.5,2);
    temp.inputEnabled = true;
    temp.events.onInputDown.add(getCord, this);
    temp.input.priorityID = 1;
    temp.input.useHandCursor = true;

    //  The platforms group contains the ground and the 2 ledges we can jump on
    platforms = game.add.group();

    //  We will enable physics for any object that is created in this group
    platforms.enableBody = true;

    createStreets();
    createAreas();

    speedText = game.add.bitmapText(350, 0, 'desyrel', 'Speed: 0', 32);
    // The score
    scoreText = game.add.bitmapText(10, 0, 'desyrel', 'Score: 0', 32);
    // game.add.text(20, 5, 'Score: 0', { fontSize: '32px', fill: '#FFFFFF',  });

    // Nitrous
    nitroText = game.add.bitmapText(635, 0, 'desyrel', 'Nitro: Full', 32);
    // game.add.text(420, 5, 'Nitro: 60', { fontSize: '32px', fill: '#FFFFFF',  });
    msgText = game.add.bitmapText(530, 0, 'desyrel', 'Go!!', 34);

    msgText.visible = false;
    //  Our controls.
    cursors = game.input.keyboard.createCursorKeys();

    // Examiners

    dudes = game.add.group();

    //  We will enable physics for any star that is created in this group
    dudes.enableBody = true;

    // Questions
    stars = game.add.group();

    //  We will enable physics for any star that is created in this group
    stars.enableBody = true;


    diamonds = game.add.group();

    //  We will enable physics for any star that is created in this group
    diamonds.enableBody = true;

    stops = game.add.group();

    stops.enableBody = true;
    //stops.create(30,70,'src_halo').scale.setTo(0.1,0.1);
    //stops.create(30,510,'src_halo').scale.setTo(0.1,0.1);
    //stops.create(700,70,'src_halo').scale.setTo(0.1,0.1);
    //stops.create(700,510,'src_halo').scale.setTo(0.1,0.1);
    //stops.create(700,280,'src_halo').scale.setTo(0.2,0.2);
    stops.sort();
    //createDude();

    // The car and its settings
    //car = game.add.sprite(0,0, 'car');
    car.scale.setTo(0.075,0.075);

    //  We need to enable physics on the car
    game.physics.arcade.enable(car);

    //  car physics properties. Give the little guy a slight bounce.

    car.body.collideWorldBounds = true;

    car.body.collideWorldBounds = true;

    car.anchor.setTo(0.3, 0.5);

    createPopup();

    start = true;

    setInterval(updateNitro,100)
    setInterval(updateSpeed,100)
}

function createStreets(){

    var street;

    //top right corner cover
    street = platforms.create(820, 42, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.25,0.2);
    street.body.immovable = true;

    //top right corner lines
    street = platforms.create(830, 63, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90 
    street.scale.setTo(0.13,0.2);
    street.body.immovable = true;

    //2nd midan cover
    street = platforms.create(870, 330, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.7,0.4);
    street.body.immovable = true;

    street = platforms.create(969, 564, 'street_round');
    street.anchor.setTo(0.5,0.5);
    street.angle += 177
    street.scale.setTo(0.17,0.17);
    street.body.immovable = true;

    street = platforms.create(28, 65, 'street_round');
    street.anchor.setTo(0.5,0.5);
    street.angle += 0
    street.scale.setTo(0.15,0.15);
    street.body.immovable = true;

    //5th vertical, 2nd horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(932, 397 + i*72, 'street_block');
    street.scale.setTo(0.17,0.19);
    street.body.immovable = true;
    }

    street = platforms.create(85, 500, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.35,0.35);
    street.body.immovable = true;

    street = platforms.create(95, 310, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.55,0.3);
    street.body.immovable = true;
    //1st vertical, 2nd horizontal
    street = platforms.create(88, 510, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 17    
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

    street = platforms.create(67, 440, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 17    
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

    street = platforms.create(100, 460, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 17    
    street.scale.setTo(0.07,0.31);
    street.body.immovable = true;

    //6th vertical, 1st horizontal
    street = platforms.create(850, 110, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 28    
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

    street = platforms.create(887, 178, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 28    
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;
    
    //1st horizontal 
    for(i = 1; i < 10; i++){
    street = platforms.create(25 + i*81, 65, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90
    street.scale.setTo(0.14,0.25);
    street.body.immovable = true;
    }

    //2nd horizontal
    for(i = 0; i < 7; i++){
    street = platforms.create(225 + i*80, 260, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90
    street.scale.setTo(0.17,0.25);
    street.body.immovable = true;
    }

    //3rd horizontal
    for(i = 0; i < 7; i++){
    street = platforms.create(225 + i*80, 370, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90
    street.scale.setTo(0.17,0.25);
    street.body.immovable = true;
    }

    //4th horizontal
    for(i = 0; i < 10; i++){
    street = platforms.create(175 + i*80, 570, 'street_block');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90
    street.scale.setTo(0.14,0.2);
    street.body.immovable = true;
    }

    //1st vertical, 1st horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(0, 90 + i*70, 'street_block');
    street.scale.setTo(0.14,0.2);
    street.body.immovable = true;
    }

    //2nd vertical, 1st horizontal
    for(i = 0; i < 1; i++){
    street = platforms.create(175, 89 + i*80, 'street_block');
    street.scale.setTo(0.17,0.355);
    street.body.immovable = true;
    }

    //3rd vertical, 1st horizontal
    for(i = 0; i < 1; i++){
    street = platforms.create(360, 89 + i*80, 'street_block');
    street.scale.setTo(0.17,0.355);
    street.body.immovable = true;
    }

    //override u turn lines
    street = platforms.create(423, 290, 'street_block');
    street.scale.setTo(0.23,0.13);
    street.body.immovable = true;

    street = platforms.create(445, 285, 'asfalt');
    street.scale.setTo(0.1,0.08);
    street.body.immovable = true;


    //overide triangle lines
    street = platforms.create(185, 92, 'asfalt');
    street.scale.setTo(0.77,0.24);
    street.body.immovable = true;

    //yellow lines adjacent to triangle
    street = platforms.create(295, 146, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 26
    street.scale.setTo(0.17,0.36);
    street.body.immovable = true;

    //white lines adjacent to triangle
    street = platforms.create(210, 130, 'street_line_2');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 20
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

    //white lines adjacent to triangle
    street = platforms.create(233, 190, 'street_line_2');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 20
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;    

    //yellow lines adjacent to triangle
    street = platforms.create(368, 170, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 21
    street.scale.setTo(0.17,0.35);
    street.body.immovable = true;

    //white lines adjacent to triangle
    street = platforms.create(390, 130, 'street_line_2');
    street.anchor.setTo(0.5,0.5);
    street.angle += 20
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

      //white lines adjacent to triangle
    street = platforms.create(370, 190, 'street_line_2');
    street.anchor.setTo(0.5,0.5);
    street.angle += 20
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

    //4th vertical, 1st horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(540, 89 + i*71, 'street_block');
    street.scale.setTo(0.17,0.176);
    street.body.immovable = true;
    }

    //5th vertical, 1st horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(720, 89 + i*71, 'street_block');
    street.scale.setTo(0.17,0.176);
    street.body.immovable = true;
    }

    //2nd vertical, 2nd horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(360, 89 + 310 + i*73, 'street_block');
    street.scale.setTo(0.17,0.185);
    street.body.immovable = true;
    }

    //3rd vertical, 2nd horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(540, 89 + 310 +  i*73, 'street_block');
    street.scale.setTo(0.17,0.185);
    street.body.immovable = true;
    }

    //4th vertical, 2nd horizontal
    for(i = 0; i < 2; i++){
    street = platforms.create(720, 89 + 310 +  i*73, 'street_block');
    street.scale.setTo(0.16,0.185);
    street.body.immovable = true;
    }

    //innner circle first midan
    street = platforms.create(85, 310, 'street_round');
    street.anchor.setTo(1,1);
    street.angle += 90
    street.scale.setTo(0.12,0.12);
    street.body.immovable = true;

    street = platforms.create(101, 310, 'street_round');
    street.anchor.setTo(1,1);
    street.scale.setTo(0.12,0.12);
    street.body.immovable = true;

    street = platforms.create(85, 310, 'street_round');
    street.anchor.setTo(1,1);
    street.angle += 180
    street.scale.setTo(0.12,0.12);
    street.body.immovable = true;

    street = platforms.create(100, 310, 'street_round');
    street.anchor.setTo(1,1);
    street.angle += 270
    street.scale.setTo(0.12,0.12);
    street.body.immovable = true;

    //overide gezera lines
    street = platforms.create(725, 290, 'asfalt');
    street.scale.setTo(0.1,0.09);
    street.body.immovable = true;

    //overide gezera lines
    street = platforms.create(170, 290, 'asfalt');
    street.scale.setTo(0.1,0.09);
    street.body.immovable = true;

    street = platforms.create(120, 619, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90    
    street.scale.setTo(0.13,0.2);
    street.body.immovable = true;

    street = platforms.create(95, 559, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 17    
    street.scale.setTo(0.13,0.2);
    street.body.immovable = true;

    street = platforms.create(52, 415, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 17    
    street.scale.setTo(0.13,0.23);
    street.body.immovable = true;

    street = platforms.create(160, 475, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.13,0.35);
    street.body.immovable = true;

    street = platforms.create(26, 300, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.13,0.35);
    street.body.immovable = true;

    street = platforms.create(115, 255, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90 
    street.scale.setTo(0.13,0.3);
    street.body.immovable = true;

    street = platforms.create(55, 242, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.03,0.03);
    street.body.immovable = true;

    street = platforms.create(157, 424, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90 
    street.scale.setTo(0.13,0.1);
    street.body.immovable = true;

    street = platforms.create(300, 114, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90 
    street.scale.setTo(0.13,0.33);
    street.body.immovable = true;

    //top right corner lines
    street = platforms.create(943, 155, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 29   
    street.scale.setTo(0.17,0.85);
    street.body.immovable = true;

    // cover below 2nd midan
    street = platforms.create(860, 410, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.55,0.05);
    street.body.immovable = true;

    // cover beside triangle midan
    street = platforms.create(870, 220, 'asfalt');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.1,0.05);
    street.body.immovable = true;

    //innner circle 2nd midan
    street = platforms.create(841, 335, 'street_round');
    street.anchor.setTo(1,1);
    street.angle += 90
    street.scale.setTo(0.2,0.2);
    street.body.immovable = true;

    street = platforms.create(879, 329, 'street_round');
    street.anchor.setTo(1,1);
    street.angle -= 20
    street.scale.setTo(0.2,0.2);
    street.body.immovable = true;

    street = platforms.create(840, 317, 'street_round');
    street.anchor.setTo(1,1);
    street.angle += 183
    street.scale.setTo(0.2,0.2);
    street.body.immovable = true;

    street = platforms.create(875, 316, 'street_round');
    street.anchor.setTo(1,1);
    street.angle += 273
    street.scale.setTo(0.2,0.2);
    street.body.immovable = true;

    //right most vertical line
    street = platforms.create(1027, 355, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.17,0.25);
    street.body.immovable = true;

    //gezera lines
    street = platforms.create(760, 315, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.17,0.13);
    street.body.immovable = true;

    //gezera lines
    street = platforms.create(230, 315, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.scale.setTo(0.17,0.13);
    street.body.immovable = true;

    //triangle bottom line
    street = platforms.create(820, 192, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle -= 105
    street.scale.setTo(0.17,0.2);
    street.body.immovable = true;

    //bottom right rectangle top line
    street = platforms.create(857, 455, 'street_line');
    street.anchor.setTo(0.5,0.5);
    street.angle += 90
    street.scale.setTo(0.17,0.38);
    street.body.immovable = true;

}

function createAreas(){
    //1st horizontal row
    var area = platforms.create(18, 65, 'square');
    area.scale.setTo(0.205,0.205);
    area.body.immovable = true;

    area = platforms.create(390, 65, 'square');
    area.scale.setTo(0.2,0.2);
    area.body.immovable = true;

    area = platforms.create(570, 65, 'square');
    area.scale.setTo(0.2,0.2);
    area.body.immovable = true;

    // 2nd horizontal row
    area = platforms.create(440, 287, 'square');
    area.scale.setTo(0.38,0.06);
    area.body.immovable = true;

    area = platforms.create(125, 287, 'square');
    area.scale.setTo(0.4,0.06);
    area.body.immovable = true;

    //3rd horizontal row
    area = platforms.create(60, 380, 'square');
    area.scale.setTo(0.4,0.2);
    area.body.immovable = true;

    area = platforms.create(390, 380, 'square');
    area.scale.setTo(0.2,0.2);
    area.body.immovable = true;

    area = platforms.create(570, 380, 'square');
    area.scale.setTo(0.2,0.2);
    area.body.immovable = true;

    area = platforms.create(730, 405, 'square');
    area.scale.setTo(0.27,0.175);
    area.body.immovable = true;

    // triangles
    area = platforms.create(300, 145, 'triangle');
    area.anchor.setTo(0.5,0.5);
    area.angle += 180
    area.scale.setTo(0.21,0.22);
    area.body.immovable = true;

    area = platforms.create(815, 172, 'triangle');
    area.anchor.setTo(0.5,0.5);
    area.angle += -13
    area.scale.setTo(0.14,0.22);
    area.body.immovable = true;

    // side triangles
    area = platforms.create(-100, 300, 'triangle');
    area.scale.setTo(0.25,0.45);
    area.body.immovable = true;

    area = platforms.create(997, 120, 'triangle');
    area.anchor.setTo(0.5,0.5);
    area.angle += 178
    area.scale.setTo(0.6,0.6);
    area.body.immovable = true;

    // el mayadenn
    area = platforms.create(55, 265, 'midan');
    area.scale.setTo(0.1,0.1);
    area.body.immovable = true;

    area = platforms.create(800, 255, 'midan');
    area.scale.setTo(0.15,0.15);
    area.body.immovable = true;

    //Bar image
    bar = platforms.create(0, 0, 'Bar');
    bar.scale.setTo(1,0.3);
    bar.body.immovable = true;

}

function update() {
    if(!start)
        return;

    //  Collide the car and the stars with the platforms
    //game.physics.arcade.collide(car, platforms);
    game.physics.arcade.collide(dudes, platforms);
    game.physics.arcade.collide(car, bar);

    //  Checks to see if the car overlaps with any of the stars, if he does call the collectStar function
    game.physics.arcade.overlap(car, dudes , collectDude, null, this);
    game.physics.arcade.overlap(car, diamonds, collectDiamond, null, this);
    game.physics.arcade.overlap(car, stars, collectStar, null, this);

    car.body.velocity.x = 0;
    car.body.velocity.y = 0;
    car.body.angularVelocity = 0;
    var move = false;
    var reverse = false;

    if(car.x >= 49 && car.x <= 166 && car.y >= 81 && car.y <= 216)
        msgText.visible = true
    //car.angle -= 90;

    directionSpeed = 200;

    if(game.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR) && nitroLeft > 0 && game.input.keyboard.isDown(Phaser.Keyboard.UP) && Popup.visible == false){
        nitro = true;
    }else{
        nitro = false;
    }

    if (game.input.keyboard.isDown(Phaser.Keyboard.UP) && Popup.visible == false)
    {
        if(speed < 450)
            speed += 5;
        if(speed > 450 && !nitro)
            speed -= 5
        if(nitro && speed < 650)
            speed += 5
        move = true;
    }else if (game.input.keyboard.isDown(Phaser.Keyboard.DOWN) && Popup.visible == false)
    {
        if(speed > -200)
            speed -= 5;
        if(speed > 0)
            speed -= 5
        reverse = true;
    }else{
        if(speed > 0)
            speed -= 10
        if(speed < 0)
            speed += 5
    }

    if (game.input.keyboard.isDown(Phaser.Keyboard.LEFT) && Popup.visible == false)
    {
        if(move){
            car.body.angularVelocity = -directionSpeed ;
        }else if(reverse){
            car.body.angularVelocity = +directionSpeed ;
        }
    }
    else if (game.input.keyboard.isDown(Phaser.Keyboard.RIGHT) && Popup.visible == false)
    {
        if(move){
            car.body.angularVelocity = +directionSpeed ;
        }else if(reverse){
            car.body.angularVelocity = -directionSpeed ;
        }    
    }

    game.physics.arcade.velocityFromAngle(car.angle-90, speed, car.body.velocity);  

    //car.angle += 90;
}

function createPopup(){
    Popup = game.add.sprite(game.world.centerX, game.world.centerY+30, 'popup');
    Popup.alpha = 0.8;
    Popup.anchor.set(0.5);
    Popup.inputEnabled = true;
    normalStyle = { font: "28px Arial", fill: "#ffffff", wordWrap: true, wordWrapWidth: Popup.width, align: "center" };
    hoverStyle = { font: "30px Arial", fill: "#f2d000", wordWrap: true, wordWrapWidth: Popup.width, align: "center" };
    wrongStyle = { font: "30px Arial", fill: "#b20000", wordWrap: true, wordWrapWidth: Popup.width, align: "center" };
    correctStyle = { font: "32px Arial", fill: "#458B00", wordWrap: true, wordWrapWidth: Popup.width, align: "center" };
    //Popup.input.enableDrag();

    //  And click the close button to close it down again
    Popup.scale.setTo(1.5,1.1);
    answerText[0] = game.add.text(-240, +50, "Answer 1", normalStyle);
    answerText[0].inputEnabled = true;
    answerText[0].events.onInputDown.add(GiveAnswer, this);
    answerText[0].input.priorityID = 1;
    answerText[0].input.useHandCursor = true;
    answerText[0].events.onInputOver.add(AnswerHoverIn, this);
    answerText[0].events.onInputOut.add(AnswerHoverOut, this);
    Popup.addChild(answerText[0]);

    answerText[1] = game.add.text(-240, +150, "Answer 2", normalStyle);
    answerText[1].inputEnabled = true;
    answerText[1].events.onInputDown.add(GiveAnswer, this);
    answerText[1].input.priorityID = 1;
    answerText[1].input.useHandCursor = true;
    answerText[1].events.onInputOver.add(AnswerHoverIn, this);
    answerText[1].events.onInputOut.add(AnswerHoverOut, this);
    Popup.addChild(answerText[1]);

    answerText[2] = game.add.text(0, +50, "Answer 3", normalStyle);
    answerText[2].inputEnabled = true;
    answerText[2].events.onInputDown.add(GiveAnswer, this);
    answerText[2].input.priorityID = 1;
    answerText[2].input.useHandCursor = true;
    answerText[2].events.onInputOver.add(AnswerHoverIn, this);
    answerText[2].events.onInputOut.add(AnswerHoverOut, this);
    Popup.addChild(answerText[2]);

    answerText[3] = game.add.text(0, +150, "Answer 4", normalStyle);
    answerText[3].inputEnabled = true;
    answerText[3].events.onInputDown.add(GiveAnswer, this);
    answerText[3].input.priorityID = 1;
    answerText[3].input.useHandCursor = true;
    answerText[3].events.onInputOver.add(AnswerHoverIn, this);
    answerText[3].events.onInputOut.add(AnswerHoverOut, this);
    Popup.addChild(answerText[3]);

    currentImage = game.add.sprite(0,0,'');

    questionText = game.add.bitmapText(0, -200, 'desyrel', 'Question', 32);
    //game.add.text(0, -200, " Question " + '', style);
    questionText.anchor.set(0.5);
    Popup.addChild(questionText);
    //NextQuestion()
    Popup.visible = false;
}


function hidePopup(){
    Popup.visible = false;
}


function NextQuestion(){
    blockAnswer = false;
    questionText.text = allQuestions[orderOfQuestions[currentQuestion]];
    for(i = 0; i < 4; i ++){
        answerText[i].text = '';
        answerText[i].setStyle(normalStyle);
    }
    currentImage.destroy();
    currentImage = game.add.sprite(-50,-150,images[orderOfQuestions[currentQuestion]]);
    Popup.addChild(currentImage);
    correctAnswer = parseInt(Math.random()*4);
    answerText[correctAnswer].text = allAnswers[orderOfQuestions[currentQuestion]];
    var r;
    for(i = 0; i < 4; i++){
        if(i != correctAnswer){
            while(true){
                r = parseInt(Math.random()*allAnswers.length);
                var duplicate = false;
                for(j = 0; j < 4; j++){
                    if(allAnswers[r] == answerText[j].text || allCategories[r] != allCategories[correctAnswer])
                        duplicate = true;
                }
                if(!duplicate)
                    break;
            }
            answerText[i].text = allAnswers[r];
        }
    }
    currentQuestion++;
    if(currentQuestion >= allQuestions.length)
        currentQuestion = 0;
}

function getCord(){
    alert(car.x+","+car.y);
}

function GiveAnswer(answer){
    if(blockAnswer)
        return;
    blockAnswer = true;
    var old = score;
    if(answer.text == allAnswers[orderOfQuestions[currentQuestion-1]])
        score += 100;
    answer.setStyle(wrongStyle);
    answerText[correctAnswer].setStyle(correctStyle);
    scoreText.text = 'Score: ' + score;
    setTimeout(NextQuestion,2000-(10*(score-old)))
}

function AnswerHoverIn(answer){
    if(blockAnswer)
        return;
    answer.setStyle(hoverStyle)
}

function AnswerHoverOut(answer){
    if(blockAnswer)
        return;
    answer.setStyle(normalStyle)
}

function updateNitro(){
    msgText.visible = false;
    if(nitro){
        nitroLeft -= 1;
        nitroText.text = 'Nitro: '+ nitroLeft+'%'
        msgText.visible = true;
    }
}

var random;
function createDude(){
    if(time > 0)
        return;
    if(!collected)
        return;
    random = parseInt(Math.random()*5);
    var child;
    child = stops.getChildAt(random);
    dudes.create(child.x+15,child.y+5,'dude',4);
}

function collectDude (car, star) {
    dudes.getChildAt(0).destroy();
    createDiamond();
    //createStar();
    startTimer();
}

function createDiamond(){
    var newRandom = parseInt(Math.random()*5);
    collected = false;
    while(random == newRandom){
        newRandom = parseInt(Math.random()*5);;
    }
    var child;
    child = stops.getChildAt(newRandom);
    diamonds.create(child.x+15 ,child.y+15,'diamond');
}

function collectDiamond (car, star){
    diamonds.getChildAt(0).destroy();
    if(stars.countLiving() != 0)
        stars.getChildAt(0).destroy();
    if(time > 0)
        Popup.visible = true;
    score += 10*time;
    scoreText.text = 'Score: ' + score;
    collected = true;
    createDude();
}

function createStar(){
    stars.create(game.world.width/2 - 30,270,'star');
    stars.create(game.world.width/2 - 30,111,'star');
}

function collectStar(car,star){
    star.destroy()
    Popup.visible = true;
}

function startTimer(){
    timerText = game.add.bitmapText(180, 0, 'desyrel', '', 33);
    time = 130;
    updateTimer();
}

function updateTimer(){
    if(time > 0){
        time -= 1;
        timerText.text = 'Time: ' + time;
        setTimeout(updateTimer,1000);
    }else{
        timerText.text = '';
        createDude();
        hidePopup();
    }
}

function updateSpeed(){
    speedText.text = 'Speed: ' + speed;
}

</script>
</body>
</html>