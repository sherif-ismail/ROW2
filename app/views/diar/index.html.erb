<!doctype html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8" />
    <title>Phaser - Making your first game, part 9</title>
    <script type="text/javascript" src="js/phaser.min.js"></script>
    <style type="text/css">
    body {
        margin: 0;
    }
    </style>
</head>
<body>

    <script type="text/javascript">
    var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: IntroCreate, update: update });

    function preload() {
        game.load.image('sky', '<%= asset_path 'sky.png' %>');
        game.load.image('ground',  '<%= asset_path 'platform.png' %>');
        game.load.image('bubble', '<%= asset_path 'bubble.png' %>');
        game.load.image('star', '<%= asset_path 'star.png' %>');
        game.load.image('ball',  '<%= asset_path 'ball-tlb.png' %>');
        game.load.image('diamond', '<%= asset_path 'diamond.png' %>');
        game.load.image('car', '<%= asset_path 'car.png' %>');
        game.load.spritesheet('dude', '<%= asset_path 'dude.png' %>', 32, 48);
        game.load.spritesheet('button-start','<%= asset_path 'button-start.png' %>', 401, 143)

    }

    var car;
    var platforms;
    var cursors;

    var dudes;
    var startButton;
    var start;
    var score = 0;
    var scoreText;
    var dudes;
    var diamonds;
    var stops;
    var timerText;
    var time;
    var checkPoint;
    var stars;
    var Popup;
    var style = { font: "32px Arial", fill: "#ff0000", wordWrap: true, wordWrapWidth: popup.width, align: "center" };

    function IntroCreate(){
        start = false;
        startButton = game.add.button(100,100,'button-start',IntroDestroy,this,1,0,2);
    }

    function IntroDestroy(){
        startButton.destroy();
        create();
    }

    function create() {

    //  We're going to be using physics, so enable the Arcade Physics system
    game.physics.startSystem(Phaser.Physics.ARCADE);

    //  A simple background for our game
    game.add.sprite(0, 0, 'sky');

    //  The platforms group contains the ground and the 2 ledges we can jump on
    platforms = game.add.group();

    //  We will enable physics for any object that is created in this group
    platforms.enableBody = true;

    // Here we create the ground.
    var ground = platforms.create(0, game.world.height - 64, 'ground');

    //  Scale it to fit the width of the game (the original sprite is 400x32 in size)
    ground.scale.setTo(2, 2);

    //  This stops it from falling away when you jump on it
    ground.body.immovable = true;


    //  Now let's create two ledges
    var ledge = platforms.create(650, 0, 'ground');
    ledge.scale.setTo(5,25);
    ledge.body.immovable = true;

    ledge = platforms.create(-150, 0, 'ground');
    ledge.scale.setTo(0.6,25);
    ledge.body.immovable = true;

    ledge = platforms.create(-150, 0, 'ground');
    ledge.scale.setTo(2,2);
    ledge.body.immovable = true;

    ledge = platforms.create(-150, 0, 'ground');
    ledge.scale.setTo(2,2);
    ledge.body.immovable = true;

    ledge = platforms.create(230, 0, 'ground');
    ledge.scale.setTo(0.7,8);
    ledge.body.immovable = true;

    ledge = platforms.create(230, game.world.height - 250, 'ground');
    ledge.scale.setTo(0.7,8);
    ledge.body.immovable = true;

    //  The score
    scoreText = game.add.text(16, 16, 'Score: 0', { fontSize: '32px', fill: '#000' });

    //  Our controls.
    cursors = game.input.keyboard.createCursorKeys();

    // Examiners

    dudes = game.add.group();

    //  We will enable physics for any star that is created in this group
    dudes.enableBody = true;

    // Questions
    stars = game.add.group();

    //  We will enable physics for any star that is created in this group
    stars.enableBody = true;


    diamonds = game.add.group();

    //  We will enable physics for any star that is created in this group
    diamonds.enableBody = true;

    stops = game.add.group();

    stops.enableBody = true;
    stops.create(130,100,'bubble');
    stops.create(130,430,'bubble');
    stops.create(550,430,'bubble');
    stops.create(550,100,'bubble');
    stops.sort();
    createDude();

    // The car and its settings
    car = game.add.sprite(140, game.world.height - 250, 'car');
    car.scale.setTo(0.1,0.1);
    //  We need to enable physics on the car
    game.physics.arcade.enable(car);

    //  car physics properties. Give the little guy a slight bounce.

    car.body.collideWorldBounds = true;

    car.body.collideWorldBounds = true;

    car.anchor.setTo(0.3, 0.5);

    checkPoint = game.add.sprite(game.world.width/2 - 30,220,'ball');

    createPopup();

    start = true;

}

function update() {

    if(!start){
         return;
    }

    //  Collide the car and the stars with the platforms
    game.physics.arcade.collide(car, platforms);
    game.physics.arcade.collide(dudes, platforms);

    //  Checks to see if the car overlaps with any of the stars, if he does call the collectStar function
    game.physics.arcade.overlap(car, dudes , collectDude, null, this);
    game.physics.arcade.overlap(car, diamonds, collectDiamond, null, this);
    game.physics.arcade.overlap(car, stars, collectStar, null, this);

    car.body.velocity.x = 0;
    car.body.velocity.y = 0;
    car.body.angularVelocity = 0;
    var move = false;
    var reverse = false;
    car.angle -= 90;

    if (game.input.keyboard.isDown(Phaser.Keyboard.UP))
    {
        game.physics.arcade.velocityFromAngle(car.angle, 250, car.body.velocity);
        move = true;
    }

    if (game.input.keyboard.isDown(Phaser.Keyboard.DOWN))
    {
        game.physics.arcade.velocityFromAngle(car.angle, -250, car.body.velocity);
        reverse = true;
    }

    if (game.input.keyboard.isDown(Phaser.Keyboard.LEFT))
    {
        if(move){
            car.body.angularVelocity = -150;
        }else if(reverse){
            car.body.angularVelocity = +150;
        }
    }
    else if (game.input.keyboard.isDown(Phaser.Keyboard.RIGHT) )
    {
        if(move){
            car.body.angularVelocity = +150;
        }else if(reverse){
            car.body.angularVelocity = -150;
        }    
    }

    car.angle += 90;

    /*
    //  Reset the cars velocity (movement)
    car.body.velocity.x = 0;

    if (cursors.left.isDown)
    {
        //  Move to the left
        car.body.velocity.x = -150;
        if(car.angle != -90)
            car.angle -= 0;
        car.animations.play('left');
    }
    else if (cursors.right.isDown)
    {
        //  Move to the right
        car.body.velocity.x = 150;
        if(car.angle != 90)
             car.angle +=0;
        car.animations.play('right');
    }
    else if (cursors.up.isDown)
    {
        car.body.velocity.y = -100;
    }
    else if (cursors.down.isDown)
    {
        car.body.velocity.y = +100;
    }
    else
    {
        //  Stand still
        car.animations.stop();
        car.body.velocity.y = 0;

        car.frame = 4;
    }
    
    //  Allow the car to jump if they are touching the ground.

    */
}

function createPopup(){
    Popup = game.add.sprite(game.world.centerX, game.world.centerY, 'ground');
    Popup.alpha = 0.8;
    Popup.anchor.set(0.5);
    Popup.inputEnabled = true;
    Popup.input.enableDrag();


    //  Position the close button to the top-right of the Popup sprite (minus 8px for spacing)
    var pw = (Popup.width ) - 22;
    var ph = (Popup.height ) - 22;

    //  And click the close button to close it down again
    Popup.scale.setTo(0.8,8);
    var closeButton = game.make.sprite(((Popup.width / 2 - 80)/ 0.8), ((Popup.height / 2 - 70) / 8), 'bubble');
    closeButton.inputEnabled = true;
    closeButton.input.priorityID = 1;
    closeButton.input.useHandCursor = true;
    closeButton.events.onInputDown.add(hidePopup, this);

    Popup.addChild(closeButton);
    closeButton.scale.setTo(1/0.8,1/8);
    var text = game.add.text(20, 10, "2", style);
    closeButton.addChild(text);

    closeButton = game.make.sprite(((Popup.width / 2 - 300)/ 0.8), ((Popup.height / 2 - 70) / 8), 'bubble');
    closeButton.inputEnabled = true;
    closeButton.input.priorityID = 1;
    closeButton.input.useHandCursor = true;
    closeButton.events.onInputDown.add(hidePopup, this);

    Popup.addChild(closeButton);
    closeButton.scale.setTo(1/0.8,1/8);
    var text = game.add.text(20, 10, "1", style);
    closeButton.addChild(text);

    text = game.add.text(0, 0, " Question " + '', style);
    text.anchor.set(0.5);
    Popup.addChild(text);
    text.scale.setTo(1/0.8,1/8);

    Popup.visible = false;
    // lawlalwl
}

function collectDude (car, star) {
    dudes.getChildAt(0).destroy();
    createDiamond();
    createStar();
    startTimer();
}

function hidePopup(){
    Popup.visible = false;
}


function collectDiamond (car, star){
    diamonds.getChildAt(0).destroy();
    if(stars.countLiving() != 0)
        stars.getChildAt(0).destroy();
    createDude();
    score += 10*time;
    scoreText.text = 'Score: ' + score;
    time = 0;
    timerText.text = '';
}

var random;
function createDude(){
    random = parseInt(Math.random()*4);
    var child;
    child = stops.getChildAt(random);
    dudes.create(child.x+15,child.y+5,'dude');
}

function createDiamond(){
    var newRandom = parseInt(Math.random()*4);
    while(random == newRandom){
        newRandom = parseInt(Math.random()*4);;
    }
    var child;
    child = stops.getChildAt(newRandom);
    diamonds.create(child.x+15 ,child.y+15,'diamond');
}

function createStar(){
    stars.create(game.world.width/2 - 30,270,'star');
}

function collectStar(){
    stars.getChildAt(0).destroy();
    Popup.visible = true;
}

function startTimer(){
    timerText = game.add.text(260, 16, '', { fontSize: '32px', fill: '#000' });
    time = 40;
    updateTimer();
}

function updateTimer(){
    if(time > 0){
        time -= 1;
        timerText.text = 'Time Left: ' + time;
        setTimeout(updateTimer,1000);
    }else{
        timerText.text = '';

    }
}

</script>
</body>
</html>